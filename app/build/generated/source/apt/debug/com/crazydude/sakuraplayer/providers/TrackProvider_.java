//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.2.
//


package com.crazydude.sakuraplayer.providers;

import android.content.Context;
import com.crazydude.sakuraplayer.interfaces.Callbacks.OnArtistsLoadedListener;
import com.crazydude.sakuraplayer.interfaces.Callbacks.OnTracksLoadedListener;
import com.crazydude.sakuraplayer.managers.MusicLibraryManager_;
import org.androidannotations.api.BackgroundExecutor;

public final class TrackProvider_
    extends TrackProvider
{

    private Context context_;

    private TrackProvider_(Context context) {
        context_ = context;
        init_();
    }

    public static TrackProvider_ getInstance_(Context context) {
        return new TrackProvider_(context);
    }

    private void init_() {
        mMusicLibraryManager = MusicLibraryManager_.getInstance_(context_);
    }

    public void rebind(Context context) {
        context_ = context;
        init_();
    }

    @Override
    public void loadAllTracks(final OnTracksLoadedListener listener) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    TrackProvider_.super.loadAllTracks(listener);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void loadAllArtists(final OnArtistsLoadedListener listener) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    TrackProvider_.super.loadAllArtists(listener);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

}
